# Default values for ansibledb.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nbentoumi/ansibledb
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


## For creating a Route, allowing your application to be accessed from outside the OCP cluster
route:
  enabled: false
  targetPort: http
  tls:
    enabled: true
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
    ## IMPORTANT: secret data should be encrypted
    key:
    caCertificate:
    certificate:
    destinationCACertificate:

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

ansibledb:
  labels: ansibledb
  admin:
    username: admin
    password: admin
  # Enable LDAP along with ldap variables
  ldap:
    enabled: false
  #  LDAP variables, functional id (fid)
  #  fid_username: "CN=fid_ad_account,OU=Users,OU=OU Units,DC=company,DC=com"
  #  fid_password: changeme
  #  server: "ldaps://ldap_server:636""
  #  baseDn: "DC=company,DC=com"
  #  The parameter below is optional, this will restrict access to specific AD group, if not defined, all AD authenticated users are allowed 
  #  requiredGroup: "CN=AD_GROUP,OU=Groups,OU=OU Units,DC=company,DC=com"
    
mongodb:
  enabled: true
  image:
    registry: docker.io
  architecture: standalone
  service:
    nameOverride: mongodb
    ports:
      mongodb: 27017
  auth:
    enabled: true
    rootUser: root
    rootPassword: changeme
    usernames: ["ansibledb"]
    databases: ["ansibledb"]
  persistence:
    size: 20Gi

  podSecurityContext: {}
    # fsGroup: 2000
  containerSecurityContext: {}
    # runAsUser: 2000
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources: {}
    # limits:
    #   cpu: 2000m
    #   memory: 1024Mi
    # requests:
    #   cpu: 1000m
    #   memory: 800Mi
  
